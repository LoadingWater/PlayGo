Index: app/src/main/java/com/wspateam/playgo/viewmodels/SharedApplicationViewModel.kt
===================================================================
--- app/src/main/java/com/wspateam/playgo/viewmodels/SharedApplicationViewModel.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/java/com/wspateam/playgo/viewmodels/SharedApplicationViewModel.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
@@ -1,15 +0,0 @@
-package com.wspateam.playgo.viewmodels
-
-import androidx.lifecycle.MutableLiveData
-import androidx.lifecycle.ViewModel
-import com.google.firebase.auth.FirebaseAuth
-import com.google.firebase.database.FirebaseDatabase
-import com.wspateam.playgo.models.User
-
-class SharedApplicationViewModel: ViewModel()
-{
-    val firebaseAuthInstance = MutableLiveData<FirebaseAuth>(FirebaseAuth.getInstance())
-    val firebaseDatabaseInstance = MutableLiveData<FirebaseDatabase>(FirebaseDatabase.getInstance())
-
-    val currentUser = MutableLiveData<User>()
-}
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/usersFragment.kt
===================================================================
--- app/src/main/java/com/wspateam/playgo/usersFragment.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/java/com/wspateam/playgo/usersFragment.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
@@ -1,59 +0,0 @@
-package com.wspateam.playgo
-
-import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.fragment.app.Fragment
-
-// TODO: Rename parameter arguments, choose names that match
-// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-private const val ARG_PARAM1 = "param1"
-private const val ARG_PARAM2 = "param2"
-
-/**
- * A simple [Fragment] subclass.
- * Use the [usersFragment.newInstance] factory method to
- * create an instance of this fragment.
- */
-class usersFragment : Fragment() {
-    // TODO: Rename and change types of parameters
-    private var param1: String? = null
-    private var param2: String? = null
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        arguments?.let {
-            param1 = it.getString(ARG_PARAM1)
-            param2 = it.getString(ARG_PARAM2)
-        }
-    }
-
-    override fun onCreateView(
-        inflater: LayoutInflater, container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-        // Inflate the layout for this fragment
-        return inflater.inflate(R.layout.fragment_users, container, false)
-    }
-
-    companion object {
-        /**
-         * Use this factory method to create a new instance of
-         * this fragment using the provided parameters.
-         *
-         * @param param1 Parameter 1.
-         * @param param2 Parameter 2.
-         * @return A new instance of fragment usersFragment.
-         */
-        // TODO: Rename and change types and number of parameters
-        @JvmStatic
-        fun newInstance(param1: String, param2: String) =
-            usersFragment().apply {
-                arguments = Bundle().apply {
-                    putString(ARG_PARAM1, param1)
-                    putString(ARG_PARAM2, param2)
-                }
-            }
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_users.xml
===================================================================
--- app/src/main/res/layout/fragment_users.xml	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/res/layout/fragment_users.xml	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".usersFragment">
-
-    <!-- TODO: Update blank fragment layout -->
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="@string/hello_blank_fragment" />
-
-</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/drawable-hdpi/ic_launcher_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-hdpi/ic_launcher_background.xml	(date 1622807623342)
+++ app/src/main/res/drawable-hdpi/ic_launcher_background.xml	(date 1622807623342)
@@ -0,0 +1,170 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path
+        android:fillColor="#3DDC84"
+        android:pathData="M0,0h108v108h-108z" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M9,0L9,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,0L19,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,0L29,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,0L39,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,0L49,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,0L59,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,0L69,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,0L79,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M89,0L89,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M99,0L99,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,9L108,9"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,19L108,19"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,29L108,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,39L108,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,49L108,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,59L108,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,69L108,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,79L108,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,89L108,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,99L108,99"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,29L89,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,39L89,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,49L89,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,59L89,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,69L89,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,79L89,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,19L29,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,19L39,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,19L49,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,19L59,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,19L69,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,19L79,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+</vector>
Index: app/src/main/java/com/wspateam/playgo/fragments/controllers/ForumPostController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/fragments/controllers/ForumPostController.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/java/com/wspateam/playgo/fragments/controllers/ForumPostController.kt	(date 1623706177272)
@@ -1,5 +1,7 @@
 package com.wspateam.playgo.fragments.controllers
 
+import AndroidUtilities.AndroidUtilities.hideKeyboard
+import SharedViewModel
 import android.util.Log
 import android.view.View
 import android.view.animation.AnimationUtils
@@ -14,20 +16,18 @@
 import com.google.firebase.database.FirebaseDatabase
 import com.wspateam.playgo.R
 import com.wspateam.playgo.adapters.RepliesRecyclerAdapter
-import com.wspateam.playgo.androidutilities.AndroidUtilities
 import com.wspateam.playgo.fragments.ForumPostFragment
 import com.wspateam.playgo.fragments.ForumPostFragmentArgs
 import com.wspateam.playgo.models.Post
 import com.wspateam.playgo.models.Reply
 import com.wspateam.playgo.models.User
-import com.wspateam.playgo.viewmodels.SharedApplicationViewModel
 import java.text.SimpleDateFormat
 import java.util.*
 
 class ForumPostController(val forumPostFragment: ForumPostFragment)
 {
     private val TAG = ForumPostController::class.java.simpleName
-    private val sharedViewModel = ViewModelProvider(forumPostFragment).get(SharedApplicationViewModel::class.java)
+    private val sharedViewModel = ViewModelProvider(forumPostFragment).get(SharedViewModel::class.java)
     private val dbRef = sharedViewModel.firebaseDatabaseInstance.value?.reference ?: FirebaseDatabase.getInstance().reference
     private val args: ForumPostFragmentArgs = ForumPostFragmentArgs.fromBundle(forumPostFragment.requireArguments())
     private val view = forumPostFragment.requireView()
@@ -172,7 +172,7 @@
     private fun cleanAfterPostCreation()
     {
         clearCreationForm()
-        AndroidUtilities.hideKeyboard(view)
+        hideKeyboard(view)
         hideReplyForm()
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/fragments/controllers/RoomsController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/fragments/controllers/RoomsController.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/java/com/wspateam/playgo/fragments/controllers/RoomsController.kt	(date 1623706263770)
@@ -1,5 +1,7 @@
 package com.wspateam.playgo.fragments.controllers
 
+import AndroidUtilities.AndroidUtilities.hideKeyboard
+import SharedViewModel
 import android.util.Log
 import android.view.View
 import android.view.animation.AnimationUtils
@@ -14,11 +16,9 @@
 import com.google.firebase.database.ValueEventListener
 import com.wspateam.playgo.R
 import com.wspateam.playgo.adapters.PostsRecyclerAdapter
-import com.wspateam.playgo.androidutilities.AndroidUtilities.AndroidUtilities.hideKeyboard
 import com.wspateam.playgo.fragments.RoomsFragment
 import com.wspateam.playgo.models.Post
 import com.wspateam.playgo.models.User
-import com.wspateam.playgo.viewmodels.SharedApplicationViewModel
 import java.text.SimpleDateFormat
 import java.util.*
 
@@ -26,7 +26,7 @@
 class RoomsController(val roomsFragment: RoomsFragment)
 {
     private val TAG = RoomsController::class.java.simpleName
-    private val sharedViewModel = ViewModelProvider(roomsFragment).get(SharedApplicationViewModel::class.java)
+    private val sharedViewModel = ViewModelProvider(roomsFragment).get(SharedViewModel::class.java)
     private val dbRef = sharedViewModel.firebaseDatabaseInstance.value?.reference ?: FirebaseDatabase.getInstance().reference
     private val view = roomsFragment.requireView()
     private val activity = roomsFragment.requireActivity()
Index: app/src/main/java/com/wspateam/playgo/androidutilities/AndroidUtilities.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/androidutilities/AndroidUtilities.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/java/com/wspateam/playgo/androidutilities/AndroidUtilities.kt	(date 1623706154258)
@@ -1,5 +1,3 @@
-package com.wspateam.playgo.androidutilities
-
 import android.content.Context
 import android.graphics.Rect
 import android.view.View
@@ -9,7 +7,7 @@
 {
     companion object AndroidUtilities
     {
-        fun hideKeyboard(view: View)
+        fun isKeyboardOpen(view: View): Boolean
         {
             val visLocalRect = Rect()
             val visGlobalRect = Rect()
@@ -19,10 +17,15 @@
 
             if (visGlobalRect != visLocalRect)
             {
-                val currentFocus = view.findFocus()
-                val inputMethodManager = view.context.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager
-                inputMethodManager.hideSoftInputFromWindow(view.windowToken, 0)
-            }
+                return true
+            }
+            return false
+        }
+
+        fun hideKeyboard(view: View)
+        {
+            val inputMethodManager = view.context.getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager
+            inputMethodManager.hideSoftInputFromWindow(view.windowToken, 0)
         }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/fragments/controllers/LoginController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/fragments/controllers/LoginController.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/java/com/wspateam/playgo/fragments/controllers/LoginController.kt	(date 1623706219223)
@@ -1,5 +1,7 @@
 package com.wspateam.playgo.fragments.controllers
 
+import AndroidUtilities.AndroidUtilities.hideKeyboard
+import SharedViewModel
 import android.util.Log
 import android.widget.EditText
 import android.widget.TextView
@@ -9,14 +11,12 @@
 import androidx.navigation.Navigation
 import com.google.firebase.database.FirebaseDatabase
 import com.wspateam.playgo.R
-import com.wspateam.playgo.androidutilities.AndroidUtilities
 import com.wspateam.playgo.fragments.LoginFragment
-import com.wspateam.playgo.viewmodels.SharedApplicationViewModel
 
 class LoginController(val loginFragment: LoginFragment)
 {
     private val TAG = LoginController::class.java.simpleName
-    private val sharedViewModel = ViewModelProvider(loginFragment).get(SharedApplicationViewModel::class.java)
+    private val sharedViewModel = ViewModelProvider(loginFragment).get(SharedViewModel::class.java)
     private val dbRef = sharedViewModel.firebaseDatabaseInstance.value?.reference ?: FirebaseDatabase.getInstance().reference
     private val view = loginFragment.requireView()
     private val activity = loginFragment.requireActivity()
@@ -24,16 +24,16 @@
     fun setUpViewsForHidingKeyboard()
     {
         view.findViewById<ConstraintLayout>(R.id.rootLoginFragment).setOnClickListener{
-            AndroidUtilities.AndroidUtilities.hideKeyboard(view)
+            hideKeyboard(view)
         }
         view.findViewById<TextView>(R.id.playGoLoginFragment).setOnClickListener {
-            AndroidUtilities.AndroidUtilities.hideKeyboard(view)
+            hideKeyboard(view)
         }
         view.findViewById<TextView>(R.id.loginLabelLoginFragment).setOnClickListener {
-            AndroidUtilities.AndroidUtilities.hideKeyboard(view)
+            hideKeyboard(view)
         }
         view.findViewById<ConstraintLayout>(R.id.frameLoginFragment).setOnClickListener {
-            AndroidUtilities.AndroidUtilities.hideKeyboard(view)
+            hideKeyboard(view)
         }
     }
 
Index: app/src/main/java/com/wspateam/playgo/fragments/controllers/ChatController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/fragments/controllers/ChatController.kt	(date 1623706077225)
+++ app/src/main/java/com/wspateam/playgo/fragments/controllers/ChatController.kt	(date 1623706077225)
@@ -0,0 +1,133 @@
+//import android.util.Log
+//import android.widget.EditText
+//import android.widget.TextView
+//import androidx.recyclerview.widget.LinearLayoutManager
+//import androidx.recyclerview.widget.RecyclerView
+//import com.google.firebase.database.DataSnapshot
+//import com.google.firebase.database.DatabaseError
+//import com.google.firebase.database.ValueEventListener
+//import com.plakhotski.chat.Adapters.MessagesRecyclerViewAdapter
+//import com.plakhotski.chat.Models.Chat
+//import com.plakhotski.chat.Models.Message
+//import com.wspateam.playgo.R
+//import java.text.SimpleDateFormat
+//import java.util.*
+//
+//class ChatController(val chatFragment: ChatFragment) : BaseController(chatFragment)
+//{
+//	private val allMessages = mutableListOf<Message>()
+//	private val opponent = ChatFragmentArgs.fromBundle(chatFragment.requireArguments()).user
+//	private val currentUserUid = authIns.currentUser?.uid!!
+//	private lateinit var currentChatUid: String
+//
+//	fun populateFragmentFromArgs()
+//	{
+//		view.findViewById<TextView>(R.id.username_fragmentChat).text = opponent.username
+//	}
+//
+//	fun sendMessage()
+//	{
+//		val multilineText = view.findViewById<EditText>(R.id.multilineText_fragmentChat)
+//		val message = Message()
+//		message.chatUid = currentChatUid
+//		message.messageUid = dbRef.child("users").child(currentUserUid).child("chats").child(message.chatUid!!).child("messages").push().key
+//		message.senderUid = currentUserUid
+//		message.messageText = multilineText.text.trim().toString()
+//		message.timeStamp = SimpleDateFormat("dd.MM.yyyy 'at' HH:mm:ss").format(Date())
+//		if (message.messageText!!.isNotBlank())
+//		{
+//			// Push to currentUser and opponent
+//			dbRef.child("users").child(currentUserUid).child("chats").child(message.chatUid!!).child("messages").push().setValue(message)
+//			dbRef.child("users").child(opponent.uid!!).child("chats").child(message.chatUid!!).child("messages").push().setValue(message)
+//			multilineText.text.clear()
+//		}
+//	}
+//
+//	private fun hookRecyclerViewToMessages()
+//	{
+//		val recyclerView = view.findViewById<RecyclerView>(R.id.recyclerView_fragmentChat)
+//		recyclerView.layoutManager = LinearLayoutManager(view.context)
+//		recyclerView.setHasFixedSize(true)
+//		val a = LinearLayoutManager(view.context)
+//		dbRef.child("users").child(currentUserUid).child("chats").child(currentChatUid).child("messages").addValueEventListener(object : ValueEventListener
+//		{
+//			override fun onCancelled(error: DatabaseError)
+//			{
+//			}
+//
+//			override fun onDataChange(snapshot: DataSnapshot)
+//			{
+//				allMessages.clear()
+//				snapshot.children.forEach {
+//					allMessages.add(it.getValue(Message::class.java)!!)
+//					Log.i(TAG, "message added.")
+//				}
+//				recyclerView.adapter = MessagesRecyclerViewAdapter(allMessages)
+//				val position = if (allMessages.size - 1 >= 0) allMessages.size else 0
+//				recyclerView.smoothScrollToPosition(position)
+//				//view.findViewById<ConstraintLayout>(R.id.root_fragmentChat).visibility = View.VISIBLE
+//			}
+//		})
+//	}
+//
+//	fun liftRecyclerView()
+//	{
+//		val recyclerView = view.findViewById<RecyclerView>(R.id.recyclerView_fragmentChat)
+//		val position = if (allMessages.size - 1 >= 0) allMessages.size - 1 else 0
+//		recyclerView.smoothScrollToPosition(position)
+//	}
+//
+//	fun createChatIfNeeded()
+//	{
+//		val currentUserUid = authIns.currentUser?.uid!!
+//
+//		dbRef.child("users").child(currentUserUid).child("chats").get().addOnSuccessListener { currentUserChats: DataSnapshot ->
+//			dbRef.child("users").child(opponent.uid!!).child("chats").get().addOnSuccessListener { opponentUserChats: DataSnapshot ->
+//				val chatUid = dbRef.child("users").child(currentUserUid).child("chats").push().key!!
+//				val newChat = Chat(chatUid, mutableListOf())
+//				// If both users have chats that are not null
+//				if (currentUserChats.exists() && opponentUserChats.exists())
+//				{
+//					// Compare all chatUids from both users.
+//					currentUserChats.children.forEach { currentUserChatsUids: DataSnapshot ->
+//						opponentUserChats.children.forEach { opponentChatsUids: DataSnapshot ->
+//							if (currentUserChatsUids.key == opponentChatsUids.key)
+//							{
+//								currentChatUid = currentUserChatsUids.key.toString()
+//								Log.i("chats", "chat exists")
+//							}
+//						}
+//					}
+//					// If non was found create one
+//					if (!this::currentChatUid.isInitialized)
+//					{
+//						dbRef.child("users").child(currentUserUid).child("chats").child(chatUid).setValue(newChat)
+//						dbRef.child("users").child(opponent.uid!!).child("chats").child(chatUid).setValue(newChat)
+//						currentChatUid = chatUid
+//					}
+//				} else
+//				{
+//					dbRef.child("users").child(currentUserUid).child("chats").child(chatUid).setValue(newChat)
+//					dbRef.child("users").child(opponent.uid!!).child("chats").child(chatUid).setValue(newChat)
+//					currentChatUid = chatUid
+//				}
+//				hookRecyclerViewToMessages()
+//			}
+//		}
+//	}
+//
+//	fun filterMessages(text: String)
+//	{
+//		val temp: MutableList<Message> = mutableListOf()
+//		for (message in allMessages)
+//		{
+//			if (message.messageText!!.toLowerCase(Locale.ROOT).contains(text))
+//			{
+//				temp.add(message)
+//			}
+//		}
+//		val recyclerView = view.findViewById<RecyclerView>(R.id.recyclerView_fragmentChat)
+//		recyclerView.adapter = MessagesRecyclerViewAdapter(temp)
+//		(recyclerView.adapter as MessagesRecyclerViewAdapter).notifyDataSetChanged()
+//	}
+//}
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/fragments/controllers/BaseController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/fragments/controllers/BaseController.kt	(date 1623705979773)
+++ app/src/main/java/com/wspateam/playgo/fragments/controllers/BaseController.kt	(date 1623705979773)
@@ -0,0 +1,12 @@
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.ViewModelProvider
+
+open class BaseController(fragment: Fragment)
+{
+	protected val TAG = fragment::class.java.simpleName
+	protected val sharedViewModel = ViewModelProvider(fragment).get(SharedViewModel::class.java)
+	protected val dbRef = sharedViewModel.getDatabaseInstance().reference
+	protected val authIns = sharedViewModel.getAuthInstance()
+	protected val activity = fragment.requireActivity()
+	protected val view = fragment.requireView()
+}
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/adapters/MessagesRecyclerViewAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/adapters/MessagesRecyclerViewAdapter.kt	(date 1623703626345)
+++ app/src/main/java/com/wspateam/playgo/adapters/MessagesRecyclerViewAdapter.kt	(date 1623703626345)
@@ -0,0 +1,72 @@
+package com.plakhotski.chat.Adapters
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.constraintlayout.widget.ConstraintLayout
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.plakhotski.chat.Models.Message
+import com.wspateam.playgo.R
+
+class MessagesRecyclerViewAdapter(var messages: MutableList<Message>): RecyclerView.Adapter<MessagesRecyclerViewAdapter.ViewHolder>()
+{
+	private val currentUserUid = FirebaseAuth.getInstance().currentUser?.uid
+	/**
+	 * Provide a reference to the type of views that you are using
+	 * (custom ViewHolder).
+	 */
+	class ViewHolder(view: View) : RecyclerView.ViewHolder(view)
+	{
+		val leftRoot = view.findViewById<ConstraintLayout>(R.id.leftRoot_messageItem)
+		val leftMessageTextView = view.findViewById<TextView>(R.id.leftMessage_messageItem)
+		val leftTimestampTextView = view.findViewById<TextView>(R.id.leftTimeStamp_messageItem)
+
+		val rightRoot = view.findViewById<ConstraintLayout>(R.id.rightRoot_messageItem)
+		val rightMessageTextView = view.findViewById<TextView>(R.id.rightMessage_messageItem)
+		val rightTimestampTextView = view.findViewById<TextView>(R.id.rightTimeStamp_messageItem)
+		init
+		{
+		}
+	}
+
+	override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder
+	{
+		// Create a new view, which defines the UI of the list item
+		val view = LayoutInflater.from(parent.context).inflate(R.layout.message_item, parent, false)
+		return MessagesRecyclerViewAdapter.ViewHolder(view)
+	}
+
+	override fun getItemCount(): Int
+	{
+		return messages.size
+	}
+
+	override fun onBindViewHolder(holder: ViewHolder, position: Int)
+	{
+		holder.leftMessageTextView.text = messages[position].messageText
+		holder.leftTimestampTextView.text = messages[position].timeStamp
+
+		if (messages[position].senderUid == currentUserUid)
+		{
+			holder.rightRoot.visibility = View.VISIBLE
+			holder.leftRoot.visibility = View.GONE
+			holder.rightMessageTextView.text = messages[position].messageText
+			holder.rightTimestampTextView.text = messages[position].timeStamp
+		}
+		else
+		{
+			holder.leftRoot.visibility = View.VISIBLE
+			holder.rightRoot.visibility = View.GONE
+			holder.leftMessageTextView.text = messages[position].messageText
+			holder.leftTimestampTextView.text = messages[position].timeStamp
+		}
+	}
+
+	fun updateList(list: MutableList<Message>)
+	{
+		messages = list
+		notifyDataSetChanged()
+	}
+}
\ No newline at end of file
Index: app/src/main/res/drawable-hdpi/ic_launcher_foreground.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-hdpi/ic_launcher_foreground.xml	(date 1623152114675)
+++ app/src/main/res/drawable-hdpi/ic_launcher_foreground.xml	(date 1623152114675)
@@ -0,0 +1,16 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108"
+    android:tint="#FFFFFF"
+    android:autoMirrored="true">
+  <group android:scaleX="1.9836"
+      android:scaleY="1.9836"
+      android:translateX="30.1968"
+      android:translateY="30.1968">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M20,2L4,2c-1.1,0 -1.99,0.9 -1.99,2L2,22l4,-4h14c1.1,0 2,-0.9 2,-2L22,4c0,-1.1 -0.9,-2 -2,-2zM17,14L7,14c-0.55,0 -1,-0.45 -1,-1s0.45,-1 1,-1h10c0.55,0 1,0.45 1,1s-0.45,1 -1,1zM17,11L7,11c-0.55,0 -1,-0.45 -1,-1s0.45,-1 1,-1h10c0.55,0 1,0.45 1,1s-0.45,1 -1,1zM17,8L7,8c-0.55,0 -1,-0.45 -1,-1s0.45,-1 1,-1h10c0.55,0 1,0.45 1,1s-0.45,1 -1,1z"/>
+  </group>
+</vector>
Index: app/src/main/res/drawable-hdpi/message_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-hdpi/message_background.xml	(date 1623702285961)
+++ app/src/main/res/drawable-hdpi/message_background.xml	(date 1623702285961)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <solid android:color="@color/white"/>
+    <stroke android:color="@color/black" android:width="0.5dp"/>
+    <corners android:radius="@dimen/defaultViewCorner"/>
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/layout/user_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/user_item.xml	(date 1623703153396)
+++ app/src/main/res/layout/user_item.xml	(date 1623703153396)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@drawable/user_item_background"
+    android:layout_margin="1dp">
+
+
+    <com.plakhotski.chat.CustomViews.AnimatedImageButton
+        android:id="@+id/startChat_userItem"
+        android:layout_width="40dp"
+        android:layout_height="40dp"
+        android:layout_margin="10dp"
+        android:background="@color/black"
+        android:src="@drawable/ic_round_chat_24_white"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="1.0"
+        app:layout_constraintStart_toEndOf="@+id/username_userItem"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+        android:id="@+id/username_userItem"
+        android:textColor="@color/white"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:drawablePadding="5dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.05"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:text="Username01023"
+        app:drawableEndCompat="@drawable/ic_baseline_circle_24_red" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/drawable-hdpi/ic_baseline_circle_24_red.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-hdpi/ic_baseline_circle_24_red.xml	(date 1622833356260)
+++ app/src/main/res/drawable-hdpi/ic_baseline_circle_24_red.xml	(date 1622833356260)
@@ -0,0 +1,5 @@
+<vector android:height="12dp" android:tint="#FF0000"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="12dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M12,2C6.47,2 2,6.47 2,12s4.47,10 10,10 10,-4.47 10,-10S17.53,2 12,2z"/>
+</vector>
Index: app/src/main/java/com/wspateam/playgo/models/Message.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/models/Message.kt	(date 1623077288766)
+++ app/src/main/java/com/wspateam/playgo/models/Message.kt	(date 1623077288766)
@@ -0,0 +1,9 @@
+package com.plakhotski.chat.Models
+
+data class Message(
+		var chatUid: String? = "",
+		var messageUid: String? = "",
+		var senderUid: String? = "",
+		var messageText: String? = "",
+		var timeStamp: String? = ""
+)
\ No newline at end of file
Index: app/src/main/res/drawable-hdpi/user_item_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-hdpi/user_item_background.xml	(date 1623702737997)
+++ app/src/main/res/drawable-hdpi/user_item_background.xml	(date 1623702737997)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <corners android:radius="@dimen/defaultViewCorner"/>
+    <stroke android:color="@color/white" android:width="1dp"/>
+    <solid android:color="@color/black"/>
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/models/Chat.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/models/Chat.kt	(date 1623077270909)
+++ app/src/main/java/com/wspateam/playgo/models/Chat.kt	(date 1623077270909)
@@ -0,0 +1,6 @@
+package com.plakhotski.chat.Models
+
+data class Chat(
+		var chatUid: String? = "",
+		var messages: MutableList<Message>? = mutableListOf()
+)
\ No newline at end of file
Index: app/src/main/res/drawable-hdpi/ic_baseline_circle_24_green.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-hdpi/ic_baseline_circle_24_green.xml	(date 1623059061006)
+++ app/src/main/res/drawable-hdpi/ic_baseline_circle_24_green.xml	(date 1623059061006)
@@ -0,0 +1,5 @@
+<vector android:height="12dp" android:tint="#00FF00"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="12dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M12,2C6.47,2 2,6.47 2,12s4.47,10 10,10 10,-4.47 10,-10S17.53,2 12,2z"/>
+</vector>
Index: app/src/main/java/com/wspateam/playgo/customviews/AnimatedImageButton.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/customviews/AnimatedImageButton.kt	(date 1623151751208)
+++ app/src/main/java/com/wspateam/playgo/customviews/AnimatedImageButton.kt	(date 1623151751208)
@@ -0,0 +1,33 @@
+package com.plakhotski.chat.CustomViews
+
+import android.content.Context
+import android.util.AttributeSet
+import android.view.MotionEvent
+
+class AnimatedImageButton(context: Context, attributeSet: AttributeSet): androidx.appcompat.widget.AppCompatImageButton(context, attributeSet)
+{
+	private val toggledSize = 0.9f
+	private val animTimeUp = 100L
+	private val animTimeDown = 30L
+	private val normalSize = 1f
+
+	init
+	{
+		this.setOnTouchListener { v, event ->
+			when(event.actionMasked)
+			{
+				MotionEvent.ACTION_DOWN ->
+				{
+					v.animate().scaleX(toggledSize).scaleY(toggledSize).setDuration(animTimeDown).start()
+					false
+				}
+				MotionEvent.ACTION_UP ->
+				{
+					v.animate().scaleX(normalSize).scaleY(normalSize).setDuration(animTimeUp).start()
+					false
+				}
+			}
+			false
+		}
+	}
+}
\ No newline at end of file
Index: app/src/main/res/drawable-hdpi/ic_round_chat_24_white.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-hdpi/ic_round_chat_24_white.xml	(date 1622834153580)
+++ app/src/main/res/drawable-hdpi/ic_round_chat_24_white.xml	(date 1622834153580)
@@ -0,0 +1,5 @@
+<vector android:autoMirrored="true" android:height="24dp"
+    android:tint="#FFFFFF" android:viewportHeight="24"
+    android:viewportWidth="24" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M20,2L4,2c-1.1,0 -1.99,0.9 -1.99,2L2,22l4,-4h14c1.1,0 2,-0.9 2,-2L22,4c0,-1.1 -0.9,-2 -2,-2zM7,9h10c0.55,0 1,0.45 1,1s-0.45,1 -1,1L7,11c-0.55,0 -1,-0.45 -1,-1s0.45,-1 1,-1zM13,14L7,14c-0.55,0 -1,-0.45 -1,-1s0.45,-1 1,-1h6c0.55,0 1,0.45 1,1s-0.45,1 -1,1zM17,8L7,8c-0.55,0 -1,-0.45 -1,-1s0.45,-1 1,-1h10c0.55,0 1,0.45 1,1s-0.45,1 -1,1z"/>
+</vector>
Index: app/src/main/java/com/wspateam/playgo/adapters/OnlineUsersRecyclerAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/adapters/OnlineUsersRecyclerAdapter.kt	(date 1623706565144)
+++ app/src/main/java/com/wspateam/playgo/adapters/OnlineUsersRecyclerAdapter.kt	(date 1623706565144)
@@ -0,0 +1,59 @@
+package com.plakhotski.chat.Adapters
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageButton
+import android.widget.TextView
+import androidx.appcompat.content.res.AppCompatResources
+import androidx.recyclerview.widget.RecyclerView
+import com.wspateam.playgo.R
+import com.wspateam.playgo.models.User
+
+
+class OnlineUsersRecyclerAdapter(private var users: MutableList<User>): RecyclerView.Adapter<OnlineUsersRecyclerAdapter.ViewHolder>()
+{
+
+    /**
+     * Provide a reference to the type of views that you are using
+     * (custom ViewHolder).
+     */
+    class ViewHolder(view: View) : RecyclerView.ViewHolder(view)
+    {
+        lateinit var opponent: User
+        val username: TextView = view.findViewById(R.id.username_userItem)
+        val startChat: ImageButton = view.findViewById(R.id.startChat_userItem)
+        init
+        {
+            // Define click listener for the ViewHolder's View.
+            startChat.setOnClickListener {
+//                val action = OnlineUsersFragmentDirections.actionOnlineUsersFragmentToChatFragment(opponent)
+//                Navigation.findNavController(view).navigate(action)
+            }
+        }
+    }
+
+    // Create new views (invoked by the layout manager)
+    override fun onCreateViewHolder(viewGroup: ViewGroup, viewType: Int): ViewHolder
+    {
+        // Create a new view, which defines the UI of the list item
+        val view = LayoutInflater.from(viewGroup.context).inflate(R.layout.user_item, viewGroup, false)
+        return ViewHolder(view)
+    }
+
+    // Replace the contents of a view (invoked by the layout manager)
+    override fun onBindViewHolder(viewHolder: ViewHolder, position: Int)
+    {
+        // Get element from your dataset at this position and replace the
+        // contents of the view with that element
+        viewHolder.opponent = users[position]
+        viewHolder.username.text = users[position].username
+        // Setting status drawable
+
+        val statusImage = if (users[position].status == "online") AppCompatResources.getDrawable(viewHolder.username.context, R.drawable.ic_baseline_circle_24_green) else AppCompatResources.getDrawable(viewHolder.username.context, R.drawable.ic_baseline_circle_24_red)
+        viewHolder.username.setCompoundDrawablesWithIntrinsicBounds(null, null, statusImage, null)
+    }
+
+    // Return the size of your dataset (invoked by the layout manager)
+    override fun getItemCount() = users.size
+}
Index: app/src/main/res/layout/message_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/message_item.xml	(date 1623088853489)
+++ app/src/main/res/layout/message_item.xml	(date 1623088853489)
@@ -0,0 +1,94 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginVertical="2dp"
+    android:orientation="vertical">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/leftRoot_messageItem"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@drawable/message_background"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <TextView
+            android:id="@+id/leftMessage_messageItem"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingHorizontal="10dp"
+            android:paddingTop="10dp"
+            android:textColor="@color/black"
+            android:textSize="18sp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.5"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.0"
+            tools:text="Message" />
+
+        <TextView
+            android:id="@+id/leftTimeStamp_messageItem"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="end"
+            android:paddingHorizontal="10dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="1.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/leftMessage_messageItem"
+            app:layout_constraintVertical_bias="1.0"
+            tools:text="timestamp" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/rightRoot_messageItem"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@drawable/message_background"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <TextView
+            android:id="@+id/rightMessage_messageItem"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingHorizontal="10dp"
+            android:paddingTop="10dp"
+            android:textColor="@color/black"
+            android:textSize="18sp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.5"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintVertical_bias="0.0"
+            tools:text="Message" />
+
+        <TextView
+            android:id="@+id/rightTimeStamp_messageItem"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="end"
+            android:paddingHorizontal="10dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="1.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/rightMessage_messageItem"
+            tools:text="timestamp" />
+
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/fragments/OnlineUsersFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/fragments/OnlineUsersFragment.kt	(date 1623706565504)
+++ app/src/main/java/com/wspateam/playgo/fragments/OnlineUsersFragment.kt	(date 1623706565504)
@@ -0,0 +1,43 @@
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.SearchView
+import androidx.fragment.app.Fragment
+import com.wspateam.playgo.R
+
+class OnlineUsersFragment : Fragment()
+{
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View?
+    {
+        // Inflate the layout for this fragment
+        return inflater.inflate(R.layout.fragment_online_users, container, false)
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?)
+    {
+        super.onViewCreated(view, savedInstanceState)
+
+        val controller = OnlineUsersController(this)
+        controller.setUpHandleForUserDisconnection()
+        controller.showUsers()
+
+        view.findViewById<SearchView>(R.id.searchView_fragmentOnlineUsers).setOnQueryTextListener(object : SearchView.OnQueryTextListener
+        {
+            override fun onQueryTextSubmit(query: String?): Boolean
+            {
+                return false
+            }
+
+            override fun onQueryTextChange(newText: String?): Boolean
+            {
+                controller.filterUsers(newText!!)
+                return true
+            }
+        })
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/viewmodels/SharedViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/viewmodels/SharedViewModel.kt	(date 1623705313132)
+++ app/src/main/java/com/wspateam/playgo/viewmodels/SharedViewModel.kt	(date 1623705313132)
@@ -0,0 +1,30 @@
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.FirebaseDatabase
+import com.wspateam.playgo.models.User
+
+class SharedViewModel: ViewModel()
+{
+	val firebaseAuthInstance = MutableLiveData<FirebaseAuth>()
+	fun getAuthInstance(): FirebaseAuth
+	{
+		if (firebaseAuthInstance.value == null)
+		{
+			firebaseAuthInstance.value = FirebaseAuth.getInstance()
+		}
+		return firebaseAuthInstance.value!!
+	}
+
+	val firebaseDatabaseInstance = MutableLiveData<FirebaseDatabase>()
+	fun getDatabaseInstance(): FirebaseDatabase
+	{
+		if (firebaseDatabaseInstance.value == null)
+		{
+			firebaseDatabaseInstance.value = FirebaseDatabase.getInstance()
+		}
+		return firebaseDatabaseInstance.value!!
+	}
+
+	val currentUser = MutableLiveData<User>()
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_online_users.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_online_users.xml	(date 1623704913129)
+++ app/src/main/res/layout/fragment_online_users.xml	(date 1623704913129)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/rootLayout_fragmentOnlineUsers"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:focusableInTouchMode="true"
+    tools:background="@color/darkBlue"
+    tools:context=".fragments.UsersFragment">
+
+    <SearchView
+        android:id="@+id/searchView_fragmentOnlineUsers"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_margin="5dp"
+        android:background="@drawable/rounded_search_view"
+        android:iconifiedByDefault="false"
+        android:queryHint="Search users"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.0" />
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recyclerView_fragmentOnlineUsers"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+
+        android:layout_margin="5dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/searchView_fragmentOnlineUsers"
+        tools:itemCount="10"
+        tools:listitem="@layout/user_item" />
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/chatFragment.kt
===================================================================
--- app/src/main/java/com/wspateam/playgo/chatFragment.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/java/com/wspateam/playgo/fragments/ChatFragment.kt	(date 1623706565511)
@@ -1,59 +1,55 @@
-package com.wspateam.playgo
-
 import android.os.Bundle
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
 import androidx.fragment.app.Fragment
-
-// TODO: Rename parameter arguments, choose names that match
-// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-private const val ARG_PARAM1 = "param1"
-private const val ARG_PARAM2 = "param2"
+import com.wspateam.playgo.R
 
-/**
- * A simple [Fragment] subclass.
- * Use the [chatFragment.newInstance] factory method to
- * create an instance of this fragment.
- */
-class chatFragment : Fragment() {
-    // TODO: Rename and change types of parameters
-    private var param1: String? = null
-    private var param2: String? = null
+class ChatFragment : Fragment()
+{
 
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        arguments?.let {
-            param1 = it.getString(ARG_PARAM1)
-            param2 = it.getString(ARG_PARAM2)
-        }
-    }
-
-    override fun onCreateView(
-        inflater: LayoutInflater, container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
+    override fun onCreateView( inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View?
+    {
         // Inflate the layout for this fragment
-        return inflater.inflate(R.layout.fragment_chat, container, false)
+        val view = inflater.inflate(R.layout.fragment_chat, container, false)
+        return view
     }
 
-    companion object {
-        /**
-         * Use this factory method to create a new instance of
-         * this fragment using the provided parameters.
-         *
-         * @param param1 Parameter 1.
-         * @param param2 Parameter 2.
-         * @return A new instance of fragment chatFragment.
-         */
-        // TODO: Rename and change types and number of parameters
-        @JvmStatic
-        fun newInstance(param1: String, param2: String) =
-            chatFragment().apply {
-                arguments = Bundle().apply {
-                    putString(ARG_PARAM1, param1)
-                    putString(ARG_PARAM2, param2)
-                }
-            }
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?)
+    {
+        super.onViewCreated(view, savedInstanceState)
+
+//        val controller = ChatController(this)
+//        controller.populateFragmentFromArgs()
+//        controller.createChatIfNeeded()
+//        view.findViewById<AnimatedImageButton>(R.id.sendMessage_fragmentChat).setOnClickListener {
+//            controller.sendMessage()
+//        }
+//        view.findViewById<RecyclerView>(R.id.recyclerView_fragmentChat).setOnClickListener {
+//            if (AndroidUtilities.AndroidUtilities.isKeyboardOpen(it))
+//            {
+//                AndroidUtilities.AndroidUtilities.hideKeyboard(it)
+//            }
+//        }
+//        view.findViewById<EditText>(R.id.multilineText_fragmentChat).setOnClickListener {
+//            controller.liftRecyclerView()
+//        }
+//
+//        view.findViewById<SearchView>(R.id.searchView_fragmentChat).setOnQueryTextListener(object: SearchView.OnQueryTextListener {
+//            override fun onQueryTextSubmit(query: String?): Boolean
+//            {
+//                return false
+//            }
+//            override fun onQueryTextChange(newText: String?): Boolean
+//            {
+//                if (newText.isNullOrBlank())
+//                {
+//                    controller.liftRecyclerView()
+//                }
+//                controller.filterMessages(newText!!)
+//                return true
+//            }
+//        })
+
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/fragment_chat.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_chat.xml	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/res/layout/fragment_chat.xml	(date 1623705851407)
@@ -1,14 +1,110 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/root_fragmentChat"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".chatFragment">
+    tools:background="@color/darkBlue"
+    tools:context=".fragments.ChatFragment"
+    android:focusableInTouchMode="true">
 
-    <!-- TODO: Update blank fragment layout -->
-    <TextView
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/header_fragmentChat"
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="@string/hello_blank_fragment" />
+        android:layout_height="wrap_content"
+        android:padding="5dp"
+        android:background="@color/teal_700"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.0">
+
+        <TextView
+            android:id="@+id/username_fragmentChat"
+            android:layout_width="wrap_content"
+            android:layout_height="50dp"
+            android:gravity="center_vertical"
+            android:paddingHorizontal="5dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintWidth_percent="0.5"
+            tools:text="Username" />
+
+        <SearchView
+            android:id="@+id/searchView_fragmentChat"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:iconifiedByDefault="false"
+            android:queryHint="Search messages"
+            android:background="@drawable/rounded_search_view"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="1.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintWidth_percent="0.5"/>
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recyclerView_fragmentChat"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_margin="5dp"
+        app:layout_constraintBottom_toTopOf="@+id/footer_fragmentChat"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/header_fragmentChat"
+        tools:itemCount="10"
+        tools:listitem="@layout/message_item" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/footer_fragmentChat"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:background="@color/white"
+        android:padding="5dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHeight_max="150dp"
+        app:layout_constraintHorizontal_bias="0.5"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="1.0">
+
+
+        <EditText
+            android:id="@+id/multilineText_fragmentChat"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:ems="10"
+            android:gravity="start|top"
+            android:inputType="textMultiLine"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toStartOf="@+id/sendMessage_fragmentChat"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+        <com.plakhotski.chat.CustomViews.AnimatedImageButton
+            android:id="@+id/sendMessage_fragmentChat"
+            android:layout_width="40dp"
+            android:layout_height="40dp"
+            android:background="@color/darkYellow"
+            android:src="@drawable/ic_round_send_24_white"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="1.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
 
-</FrameLayout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/rounded_edit_text.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/rounded_edit_text.xml	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/res/drawable/rounded_edit_text.xml	(date 1623705440197)
@@ -1,7 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <shape xmlns:android="http://schemas.android.com/apk/res/android"
     android:shape="rectangle">
-    <solid android:color="@color/white"/>
     <corners android:radius="@dimen/defaultViewCorner"/>
-    <size android:height="40dp"/>
+    <solid android:color="@color/white"/>
+    <stroke android:color="@color/black" android:width="1dp"/>
+
 </shape>
\ No newline at end of file
Index: app/src/main/res/drawable-hdpi/ic_round_send_24_white.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-hdpi/ic_round_send_24_white.xml	(date 1623063405578)
+++ app/src/main/res/drawable-hdpi/ic_round_send_24_white.xml	(date 1623063405578)
@@ -0,0 +1,5 @@
+<vector android:autoMirrored="true" android:height="24dp"
+    android:tint="#FFFFFF" android:viewportHeight="24"
+    android:viewportWidth="24" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M3.4,20.4l17.45,-7.48c0.81,-0.35 0.81,-1.49 0,-1.84L3.4,3.6c-0.66,-0.29 -1.39,0.2 -1.39,0.91L2,9.12c0,0.5 0.37,0.93 0.87,0.99L17,12 2.87,13.88c-0.5,0.07 -0.87,0.5 -0.87,1l0.01,4.61c0,0.71 0.73,1.2 1.39,0.91z"/>
+</vector>
Index: app/src/main/java/com/wspateam/playgo/fragments/controllers/OnlineUsersController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/fragments/controllers/OnlineUsersController.kt	(date 1623705313109)
+++ app/src/main/java/com/wspateam/playgo/fragments/controllers/OnlineUsersController.kt	(date 1623705313109)
@@ -0,0 +1,68 @@
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.database.DataSnapshot
+import com.google.firebase.database.DatabaseError
+import com.google.firebase.database.FirebaseDatabase
+import com.google.firebase.database.ValueEventListener
+import com.plakhotski.chat.Adapters.OnlineUsersRecyclerAdapter
+import com.wspateam.playgo.R
+import com.wspateam.playgo.models.User
+import java.util.*
+
+
+class OnlineUsersController(val onlineUsersFragment: OnlineUsersFragment) : BaseController(onlineUsersFragment)
+{
+	private val allUsers = mutableListOf<User>()
+
+	fun setUpHandleForUserDisconnection()
+	{
+		val uid = authIns.currentUser!!.uid
+		val offlineUsers = FirebaseDatabase.getInstance().reference.child("offlineUsers").child(uid)
+		offlineUsers.onDisconnect().setValue(uid)
+		val online = FirebaseDatabase.getInstance().reference.child("onlineUsers").child(uid)
+		online.onDisconnect().removeValue()
+		val user = FirebaseDatabase.getInstance().reference.child("users").child(uid).child("isOnline")
+		online.onDisconnect().setValue("false")
+	}
+
+	fun showUsers()
+	{
+		val recyclerView = view.findViewById<RecyclerView>(R.id.recyclerView_fragmentOnlineUsers)
+		dbRef.child("users").addValueEventListener(object : ValueEventListener
+		{
+			override fun onCancelled(error: DatabaseError)
+			{
+			}
+
+			override fun onDataChange(snapshot: DataSnapshot)
+			{
+				allUsers.clear()
+				snapshot.children.forEach {
+					val user = it.getValue(User::class.java)!!
+					if (authIns.currentUser?.uid!! != user.uid)
+					{
+						allUsers.add(user)
+					}
+				}
+				recyclerView.layoutManager = LinearLayoutManager(view.context)
+				recyclerView.setHasFixedSize(true)
+				recyclerView.adapter = OnlineUsersRecyclerAdapter(allUsers)
+			}
+		})
+	}
+
+	fun filterUsers(text: String)
+	{
+		val temp: MutableList<User> = mutableListOf()
+		for (user in allUsers)
+		{
+			if (user.username!!.toLowerCase(Locale.ROOT).contains(text))
+			{
+				temp.add(user)
+			}
+		}
+		val recyclerView = view.findViewById<RecyclerView>(R.id.recyclerView_fragmentOnlineUsers)
+		recyclerView.adapter = OnlineUsersRecyclerAdapter(temp)
+		(recyclerView.adapter as OnlineUsersRecyclerAdapter).notifyDataSetChanged()
+	}
+}
\ No newline at end of file
Index: app/src/main/java/com/wspateam/playgo/models/User.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/wspateam/playgo/models/User.kt	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/java/com/wspateam/playgo/models/User.kt	(date 1623703489381)
@@ -7,5 +7,11 @@
   var username: String? = "",
   var email: String? = "",
   var password: String? = "",
+  var status: String? = "offline",
   var postedPosts: MutableList<String> = mutableListOf()
- ) : Serializable
+ ) : Serializable {
+  override fun toString(): String
+  {
+    return "UID: $uid, USERNAME: $username, EMAIL: $email, PASSWORD: $password, ISONLINE: $status."
+  }
+}
\ No newline at end of file
Index: app/src/main/res/navigation/navigation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/navigation/navigation.xml	(revision 758af367be3cce07ec1fdb8b15c6a74803e8982e)
+++ app/src/main/res/navigation/navigation.xml	(date 1623705574946)
@@ -101,7 +101,7 @@
         android:id="@+id/usersFragment"
         android:name="com.wspateam.playgo.usersFragment"
         android:label="fragment_users"
-        tools:layout="@layout/fragment_users" >
+        tools:layout="@layout/fragment_online_users" >
         <action
             android:id="@+id/action_usersFragment_to_chatFragment"
             app:destination="@id/chatFragment"
@@ -115,5 +115,9 @@
         android:id="@+id/chatFragment"
         android:name="com.wspateam.playgo.chatFragment"
         android:label="fragment_chat"
-        tools:layout="@layout/fragment_chat" />
+        tools:layout="@layout/fragment_chat" >
+        <argument
+            android:name="User"
+            app:argType="com.wspateam.playgo.models.User" />
+    </fragment>
 </navigation>
\ No newline at end of file
